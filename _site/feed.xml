<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="https://ytoku.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ytoku.com/" rel="alternate" type="text/html" /><updated>2018-08-14T17:26:50+09:00</updated><id>https://ytoku.com/</id><title type="html">full-scraτch</title><subtitle>Everything I know, think and feel.</subtitle><author><name>yto9</name></author><entry><title type="html">B - 花占い \| AtCoder Beginner Contest 010</title><link href="https://ytoku.com/writeup/ABC010B/" rel="alternate" type="text/html" title="B - 花占い \| AtCoder Beginner Contest 010" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC010B</id><content type="html" xml:base="https://ytoku.com/writeup/ABC010B/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc010/tasks/abc010_2&quot;&gt;B - 花占い | AtCoder Beginner Contest 010&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;なぎさちゃんに軽く狂気を感じるが…&lt;br /&gt;
枚数を3で割った余りが2または偶数ではいけない．&lt;br /&gt;
nも$a_i$の最大値も小さいのでwhile文でカウントするだけ．&lt;/p&gt;

&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;花びらが1枚のときには嫌いにはならないので条件を満たさないことはない．&lt;/p&gt;
&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc010/submissions/3006540&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/vector/vector/&quot;&gt;vector&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/vector/vector/push_back/&quot;&gt;push_back()&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC010" /><category term="100" /><category term="vector" /><category term="push_back()" /><summary type="html">B - 花占い | AtCoder Beginner Contest 010</summary></entry><entry><title type="html">A - ハンドルネーム \| AtCoder Beginner Contest 010</title><link href="https://ytoku.com/writeup/ABC010A/" rel="alternate" type="text/html" title="A - ハンドルネーム \| AtCoder Beginner Contest 010" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC010A</id><content type="html" xml:base="https://ytoku.com/writeup/ABC010A/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc010/tasks/abc010_1&quot;&gt;A - ハンドルネーム  | AtCoder Beginner Contest 010&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;入力に”pp”を連結して出力する．&lt;/p&gt;

&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;特になし&lt;/p&gt;
&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc010/submissions/3006476&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;www.cplusplus.com/reference/string/string/&quot;&gt;string&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/string/string/operator+/&quot;&gt;連結(+)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC010" /><category term="100" /><category term="string" /><summary type="html">A - ハンドルネーム | AtCoder Beginner Contest 010</summary></entry><entry><title type="html">B - 心配性な富豪、ファミリーレストランに行く。 \| AtCoder Beginner Contest 009</title><link href="https://ytoku.com/writeup/ABC009B/" rel="alternate" type="text/html" title="B - 心配性な富豪、ファミリーレストランに行く。 \| AtCoder Beginner Contest 009" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC009B</id><content type="html" xml:base="https://ytoku.com/writeup/ABC009B/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc009/tasks/abc009_2&quot;&gt;B - 心配性な富豪、ファミリーレストランに行く。  | AtCoder Beginner Contest 009&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;文章量の割に必要な情報が少ない．&lt;br /&gt;
set&lt;int&gt;を使い金額をuniqueに格納する．デフォルトだと昇順なのでrbegin()を用いイテレータを1つ進めたところの値を出力する．&lt;/int&gt;&lt;/p&gt;

&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;全ての料理の金額が同じであることはない．とあるので2&amp;lt;=Nより必ず2番目に高い料理が存在する．&lt;/p&gt;

&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;
&lt;p&gt;rbegin()を1つ進めることで2番目に高い料理の値段が得られる．&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rbegin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc009/submissions/3006296&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/set/&quot;&gt;set&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/set/set/insert/&quot;&gt;insert()&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/set/set/rbegin/&quot;&gt;rbegin()&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC009" /><category term="100" /><summary type="html">B - 心配性な富豪、ファミリーレストランに行く。 | AtCoder Beginner Contest 009</summary></entry><entry><title type="html">A - 引越し作業 \| AtCoder Beginner Contest 009</title><link href="https://ytoku.com/writeup/ABC009A/" rel="alternate" type="text/html" title="A - 引越し作業 \| AtCoder Beginner Contest 009" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC009A</id><content type="html" xml:base="https://ytoku.com/writeup/ABC009A/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc009/tasks/abc009_1&quot;&gt;A - 引越し作業 | AtCoder Beginner Contest 009&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;出来るだけ両手を使うのが往復回数を減らすのには必要なので，両手を使う場合はN/2回．片手を使う場合はN%2回．
必要な往復数はint型でN/2+N%2．&lt;/p&gt;
&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;N == 1の時 0 + 1 = 1でこれを満たす．&lt;/p&gt;
&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc009/submissions/3006076&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;int型の扱い&lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC009" /><category term="100" /><category term="int" /><summary type="html">A - 引越し作業 | AtCoder Beginner Contest 009</summary></entry><entry><title type="html">B - 投票 \| AtCoder Beginner Contest 008</title><link href="https://ytoku.com/writeup/ABC008B/" rel="alternate" type="text/html" title="B - 投票 \| AtCoder Beginner Contest 008" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC008B</id><content type="html" xml:base="https://ytoku.com/writeup/ABC008B/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc008/tasks/abc008_2&quot;&gt;B - 投票 | AtCoder Beginner Contest 008&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;名前をkeyとしてその得票数をvalueとする連想配列を用いそこから最大valueを持つkeyを返す．&lt;br /&gt;
特にkeyでsortする必要はないのでunordered_map&amp;lt;string,int&amp;gt;を利用する．&lt;/p&gt;

&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;票数は必ず1以上であることが保証されている．&lt;br /&gt;
無記名票等はなし．&lt;br /&gt;
同数の場合はそのうち誰でもいい．&lt;/p&gt;

&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;
&lt;p&gt;unordered_map()のoperator&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;は存在しないkeyにアクセスするとdefault constructorによる要素生成(今回はintなので0初期化)を行うのでmp[s]++の部分は以下のような挙動になる．&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;(keyが存在しない) -&amp;gt; 0(生成) -&amp;gt; 1(後置インクリメント)&lt;/li&gt;
  &lt;li&gt;(keyが存在) -&amp;gt; mp[s]++(後置インクリメント)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そうして得票数がmpに格納出来たので，max_element()を用いてvalueが最大値を示すiteratorを取得し，そのkeyを出力する．&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;unordered_map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),[](&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc008/submissions/3005877&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;unordered_map
    &lt;ul&gt;
      &lt;li&gt;operator[]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;max_element()&lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC008" /><category term="100" /><category term="unordered_map" /><category term="max_element()" /><summary type="html">B - 投票 | AtCoder Beginner Contest 008</summary></entry><entry><title type="html">A - アルバム \| AtCoder Beginner Contest 008</title><link href="https://ytoku.com/writeup/ABC008A/" rel="alternate" type="text/html" title="A - アルバム \| AtCoder Beginner Contest 008" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC008A</id><content type="html" xml:base="https://ytoku.com/writeup/ABC008A/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc008/tasks/abc008_1&quot;&gt;A - アルバム | AtCoder Beginner Contest 008&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;T - (S - 1)を出力する．&lt;/p&gt;
&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;S == 1の場合も S == Tの場合も同様で問題ない．&lt;/p&gt;

&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://abc104.contest.atcoder.jp/submissions/2977590&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;p&gt;特になし&lt;/p&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC008" /><category term="100" /><summary type="html">A - アルバム | AtCoder Beginner Contest 008</summary></entry><entry><title type="html">B - 辞書式順序 \| AtCoder Beginner Contest 007</title><link href="https://ytoku.com/writeup/ABC007B/" rel="alternate" type="text/html" title="B - 辞書式順序 \| AtCoder Beginner Contest 007" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC007B</id><content type="html" xml:base="https://ytoku.com/writeup/ABC007B/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc007/tasks/abc007_2&quot;&gt;B - 辞書式順序 | AtCoder Beginner Contest 007&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;|A| &amp;gt; 1の時は|A|の末尾一文字削って，|A|==1の時はA[0]==’a’の時は-1,それ以外はA[0]-1を出力する．という方針でやったのが&lt;a href=&quot;https://beta.atcoder.jp/contests/abc007/submissions/3005613&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;だが，文字列のコピーは終端文字(‘\0’)の扱いがセンシティブになるので出来るだけ使用は避けたい．&lt;br /&gt;
一個目の条件に引っ張られたがそもそも”a”以外の文字列より”a”の方が小さいのでA=”a”以外の時は”a”を返すことにする．&lt;/p&gt;
&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;A = “a” の場合 -1を返す．&lt;/p&gt;
&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc007/submissions/3005668&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;string
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/string/string/operators/&quot;&gt;比較演算子（== != &amp;lt; &amp;lt;= &amp;gt; &amp;gt;=）&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/string/string/copy/&quot;&gt;copy()&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC007" /><category term="100" /><category term="string" /><category term="copy()" /><summary type="html">B - 辞書式順序 | AtCoder Beginner Contest 007</summary></entry><entry><title type="html">A - 植木算 \| AtCoder Beginner Contest 007</title><link href="https://ytoku.com/writeup/ABC007A/" rel="alternate" type="text/html" title="A - 植木算 \| AtCoder Beginner Contest 007" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC007A</id><content type="html" xml:base="https://ytoku.com/writeup/ABC007A/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc007/tasks/abc007_1&quot;&gt;A - 植木算 | AtCoder Beginner Contest 007&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;n-1を出力する．&lt;/p&gt;

&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;n &amp;gt;= 1なので問題ない．&lt;/p&gt;
&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc007/submissions/3005498&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;p&gt;特になし&lt;/p&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC007" /><category term="100" /><summary type="html">A - 植木算 | AtCoder Beginner Contest 007</summary></entry><entry><title type="html">B - トリボナッチ数列 \| AtCoder Beginner Contest 006</title><link href="https://ytoku.com/writeup/ABC006B/" rel="alternate" type="text/html" title="B - トリボナッチ数列 \| AtCoder Beginner Contest 006" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC006B</id><content type="html" xml:base="https://ytoku.com/writeup/ABC006B/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc006/tasks/abc006_2&quot;&gt;B - トリボナッチ数列 | AtCoder Beginner Contest 006&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A3%E3%83%9C%E3%83%8A%E3%83%83%E3%83%81%E6%95%B0#%E9%A0%85%E6%95%B0%E3%81%AE%E5%A4%89%E6%9B%B4&quot;&gt;フィボナッチ数&lt;/a&gt;の3つ版．フィボナッチは人名だが項数が増えた版は冗談のような名付けになっている．&lt;br /&gt;
実装方法はフィボナッチと同じく再帰．愚直に計算すると&lt;script type=&quot;math/tex&quot;&gt;O(n!)&lt;/script&gt;となってしまうが，再帰関数の返り値をメモ化することで&lt;script type=&quot;math/tex&quot;&gt;O(n)&lt;/script&gt;で求められる．&lt;/p&gt;
&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;10007で割った余りを出力する．&lt;/p&gt;
&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;
&lt;p&gt;配列は初期化子リスト{}で指定しなかった要素は0初期化されるので{}で全要素を0初期化出来る．また代入式はその代入される変数の変わりに使用できるのでtri()のreturn文は以下のように書ける．&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define MOD 10007
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//0-initialized&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// return memo[n] = (tri(n - 1) + tri(n - 2) + tri(n - 3))%MOD;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc006/submissions/3005254&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;br /&gt;
上記のソースコードでコメントアウトしてある順で記述すると
&lt;img src=&quot;/images/tribonacchi.png&quot; alt=&quot;tribonacchi&quot; /&gt;
上図のように実行速度，使用メモリ量ともに増加するのでtri(x)で出来るだけメモ化された値を再利用する(xが小さい順に計算される)ようにした方が効率がいい(この問題自体はどちらでもAC)．&lt;br /&gt;
&lt;a href=&quot;https://beta.atcoder.jp/contests/abc006/submissions/3005257&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/ja-jp/library/w7wd1177.aspx&quot;&gt;初期化&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;配列
        &lt;ul&gt;
          &lt;li&gt;初期化子{}&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;再帰&lt;/li&gt;
  &lt;li&gt;メモ化
    &lt;ul&gt;
      &lt;li&gt;初期化(今回は0初期化)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;余り&lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC006" /><category term="100" /><category term="初期化" /><category term="メモ化" /><category term="余り" /><summary type="html">B - トリボナッチ数列 | AtCoder Beginner Contest 006</summary></entry><entry><title type="html">A - 世界のFizzBuzz \| AtCoder Beginner Contest 006</title><link href="https://ytoku.com/writeup/ABC006A/" rel="alternate" type="text/html" title="A - 世界のFizzBuzz \| AtCoder Beginner Contest 006" /><published>2018-08-14T00:00:00+09:00</published><updated>2018-08-14T00:00:00+09:00</updated><id>https://ytoku.com/writeup/ABC006A</id><content type="html" xml:base="https://ytoku.com/writeup/ABC006A/">&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc006/tasks/abc006_1&quot;&gt;A - 世界のFizzBuzz | AtCoder Beginner Contest 006&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Fizz_Buzz&quot;&gt;FizzBuzz&lt;/a&gt;の一種．&lt;br /&gt;
3が含まれる場合とあるが入力がひと桁のみなので単に3で割り切れるかどうかの判断のみでいい．&lt;br /&gt;
仮に複数桁の入力を許すとしたらwhile文で10の商と余りをチェックする感じかな&lt;/p&gt;

&lt;h3 id=&quot;コーナーケース検討&quot;&gt;コーナーケース検討&lt;/h3&gt;
&lt;p&gt;特になし．&lt;/p&gt;
&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/abc006/submissions/3005119&quot; target=&quot;_blank&quot;&gt;Submission&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;データ構造アルゴリズム&quot;&gt;データ構造・アルゴリズム&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Fizz_Buzz&quot;&gt;FizzBuzz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>yto9</name></author><category term="競プロ" /><category term="AtCoder" /><category term="ABC006" /><category term="100" /><category term="FizzBuzz" /><summary type="html">A - 世界のFizzBuzz | AtCoder Beginner Contest 006</summary></entry></feed>